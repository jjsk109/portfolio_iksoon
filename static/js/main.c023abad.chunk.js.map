{"version":3,"sources":["App.module.css","selfIntroduction/selfIntroduction.module.css","imgUpload/imgupload.module.css","imgUpload/myDropzone/myDropzone.module.css","my_canvas/my_canvas.module.css","selfIntroduction/selfIntroduction.jsx","apiCollection/apiCollection.jsx","imgUpload/imgGallery/imgGallery.jsx","imgUpload/imgupload.jsx","header/portfolioHeader.jsx","my_canvas/my_canvas.jsx","App.js","reportWebVitals.js","service/image_uploader.js","imgUpload/myDropzone/myDropzone.jsx","service/firebase.js","index.js","service/image_database.js","header/portfolioHeader.module.css"],"names":["module","exports","SelfIntroduction","props","className","styles","self","logo","ApiCollection","AnyReactComponent","text","useState","Date","value","onChange","defaultProps","center","lat","lng","zoom","selectedValue","handleChange","style","height","width","bootstrapURLKeys","key","defaultCenter","defaultZoom","name","ImgGallery","file","src","alt","Imgupload","FileInput","imageDatabase","files","setFile","useEffect","syncImages","onFileChange","updated","id","url","saveImage","gallery","Object","keys","map","PortfolioHeader","setPage","nav","list","tag","onClick","icon","faAddressCard","size","faBox","faImages","faCaravan","Mycanvas","imageUploader","canvasRef","useRef","ctx","setCtx","drawColor","setColor","white","drawColorClass","setColorClass","draw","setDraw","setSize","canvasWidth","setCanvasWidth","canvaHeight","setCanvasHeight","commends","setComends","commendCnt","setCnt","canvas","current","window","innerWidth","innerHeight","context","getContext","changeColor","selectColor","color","target","changeSize","event","saveHandel","a","upload","toDataURL","uploaded","time","now","can","ref","onMouseDown","beginPath","arc","clientX","clientY","Math","PI","fillStyle","fill","onMouseUp","getImageData","onMouseMove","onMouseLeave","reset","clearRect","cnt","length","putImageData","button_box","black","red","blue","yellow","brown","green","pink","type","min","max","App","page","toc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ImageUploader","data","FormData","append","fetch","method","body","result","json","MyDropzone","console","log","onDrop","useCallback","acceptedFiles","forEach","reader","FileReader","onload","readAsArrayBuffer","useDropzone","getRootProps","getInputProps","isDragActive","zoon","firebaseDatabase","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","database","on","snapshot","val","off","set","remove","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c023abad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"background\":\"App_background__1IWzh\",\"toc\":\"App_toc__244t6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"self\":\"selfIntroduction_self__1Y9t4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gallery\":\"imgupload_gallery__3Aj3H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"zoon\":\"myDropzone_zoon__xaD03\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"can\":\"my_canvas_can__3TBZD\",\"button_box\":\"my_canvas_button_box__2dhzi\",\"red\":\"my_canvas_red__1faci\",\"blue\":\"my_canvas_blue__3uKjT\",\"yellow\":\"my_canvas_yellow__2Zvhy\",\"white\":\"my_canvas_white__FwVUs\",\"brown\":\"my_canvas_brown__3lCXF\",\"green\":\"my_canvas_green__2ezzI\",\"pink\":\"my_canvas_pink__26UjP\",\"black\":\"my_canvas_black__2OpOd\",\"reset\":\"my_canvas_reset__3ulIU\"};","\nimport React from 'react';\nimport styles from './selfIntroduction.module.css'\n\nconst SelfIntroduction = (props) => {\n    return (\n        <div className={styles.self} >\n            <ul className={styles.logo}>\n                <li>\n                    <span>이름</span>\n                    <span>장익순</span>\n                </li>\n                <li>\n                    <span>생년월일(나이)</span>\n                    <span> 1992년 10월 09일 (30세)</span>\n                </li>\n                <li>\n                    <span>성별</span>\n                    <span>남</span>\n                    \n                </li>\n                <li>\n                    <span>한마디</span>\n                    <span>\n                        많은 것에 도전하고 학습하고 싶은 프론트엔드 개발자\n                    </span>\n                </li>\n                <li>\n                    <span>공부한 것</span>\n                    <span>\n                        HTML, css, JavaScript, react, Java, MFC, \n                    </span>\n                </li>\n            </ul>\n        </div>\n    );\n    }\n\nexport default SelfIntroduction;","import React, { useState } from 'react';\nimport GoogleMapReact  from 'google-map-react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport { Radio, RadioGroup } from 'react-radio-group';\n\n\nfunction ApiCollection(props) {\n    const AnyReactComponent = ({ text }) => <div>{text}</div>;\n\n    const [value, onChange] = useState(new Date());\n    const defaultProps = {\n      center: {\n        lat: 37.0083705,\n        lng: 127.0802772\n      },\n      zoom: 11\n    };\n    \n    const [selectedValue,handleChange] = useState(props.props[0]);\n\n    return (\n        <div>\n            <h3>달력 어썸</h3>\n            <Calendar\n                onChange={onChange}\n                value={value}  \n            />\n            <h3>구글지도 어썸</h3>\n            <div style={{ height: '50vh', width: '100' }}>\n                <GoogleMapReact\n                    bootstrapURLKeys={{ key: \"\" }}\n                    defaultCenter={defaultProps.center}\n                    defaultZoom={defaultProps.zoom}\n                >\n                <AnyReactComponent\n                    lat={59.955413}\n                    lng={30.337844}\n                    text=\"My Marker\"\n                    />\n                </GoogleMapReact>\n            </div>\n            <h3>라디오 버튼 어썸</h3>\n            <RadioGroup name=\"fruit\" selectedValue={selectedValue} onChange={handleChange}>\n                <Radio value=\"apple\" />Apple\n                <Radio value=\"orange\" />Orange\n                <Radio value=\"watermelon\" />Watermelon\n            </RadioGroup>\n        \n        </div>\n    );\n}\n\nexport default ApiCollection;","import React from 'react';\n\nconst ImgGallery = ({file}) => {\n    return(\n        <div>\n            <img src={file} alt=\"\" />\n        </div>\n    )\n}\n\nexport default ImgGallery;","import { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport ImgGallery from \"./imgGallery/imgGallery\";\nimport styles from './imgupload.module.css';\n\nconst Imgupload = ({FileInput,imageDatabase}) => {\n \n  const [files, setFile] = useState({});\n \n  useEffect(() => {\n    imageDatabase.syncImages(files =>{\n      setFile(files);\n    });\n  },[ imageDatabase]);\n\n  const onFileChange = file => {\n    setFile(files => {\n      const updated = {...files};\n      updated[file.id] = file.url;\n      return updated;\n    })\n    imageDatabase.saveImage(file.id,file.url);\n  }\n\n  useEffect(() => {\n   \n  })\n  return (\n    <div>\n      <h3>이미지 업로드</h3>\n      <FileInput onFileChange={onFileChange}/>\n      <div className={styles.gallery}>\n      {Object.keys(files).map(key => (\n        <ImgGallery key={key} file={files[key]}/>\n      ))}\n      </div>\n    </div>\n  );\n    \n}\n\nexport default Imgupload;","import {React} from 'react';\nimport styles from './portfolioHeader.module.css';\nimport { faAddressBook, faAddressCard, faBox, faCamera, faCaravan, faImage, faImages } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst PortfolioHeader = ({setPage}) => {\n    const onClickSelf = () =>{\n        setPage('self');\n    }\n    const onClickAsw = () =>{\n        setPage('asw');\n    }\n    const onClickHappit = () =>{\n        setPage('habbit');\n    }\n    const onClickCanvas = () =>{\n        setPage('canvas');\n    }\n    return(\n    <header className={styles.nav}>\n        <div className={styles.logo}>\n            <h1>Portfolio</h1> \n        </div>\n        <ul className={styles.list}>\n            <li className={styles.tag}><a onClick={onClickSelf} ><FontAwesomeIcon icon={faAddressCard} size=\"1x\" />  자기소개</a></li>\n            <li className={styles.tag}><a onClick={onClickAsw} > <FontAwesomeIcon icon={faBox} size=\"1x\" />이것저것</a></li>\n            <li className={styles.tag}><a onClick={onClickHappit}> <FontAwesomeIcon icon={faImages} size=\"1x\" />겔러리</a></li>\n            <li className={styles.tag}><a onClick={onClickCanvas}> <FontAwesomeIcon icon={faCaravan} size=\"1x\" />켄버스</a></li>\n        </ul>\n    </header>\n)};\n\nexport default PortfolioHeader;","import React, { useState } from 'react';\nimport styles from './my_canvas.module.css';\nimport { useRef } from 'react';\nimport { useEffect } from 'react';\n\n\n\nconst Mycanvas = ({imageDatabase,imageUploader}) => {\n    const canvasRef = useRef(null);\n    const [ctx, setCtx] = useState([]);\n    const [drawColor,setColor] = useState('white');\n    const [drawColorClass,setColorClass] = useState(styles.white);\n    const [draw, setDraw] = useState(false);\n    const [size, setSize] = useState(20);\n    const [canvasWidth, setCanvasWidth] = useState(0);\n    const [canvaHeight, setCanvasHeight] = useState(0);\n    const [commends,setComends] = useState([{}]);\n    const [commendCnt,setCnt] = useState(0)\n\n\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        canvas.width = window.innerWidth;\n        canvas.height = window.innerHeight;\n        const context = canvas.getContext(\"2d\"); \n        setCtx(context);\n        setCanvasWidth( canvas.width);\n        setCanvasHeight(canvas.height);\n       \n    }, []);\n\n    const drawStart = event => {\n        setDraw(true);\n        ctx.beginPath();\n        ctx.arc(event.clientX ,event.clientY,size,Math.PI * 2, false);\n        ctx.fillStyle=`${drawColor}`;\n        ctx.fill();\n        \n    }\n    const drawEnd = () => {\n        setDraw(false);\n        if(commendCnt !==0){\n            const draw = [ctx.getImageData(0,0,canvasWidth,canvaHeight)];\n            setComends(draw);\n            setCnt(0);\n        }else{\n            const draw = [ctx.getImageData(0,0,canvasWidth,canvaHeight),...commends];\n            setComends(draw);\n        }\n    }\n    const finishDrawing = () => {\n        setDraw(false);\n        if(commendCnt !==0){\n            const draw = [ctx.getImageData(0,0,canvasWidth,canvaHeight)];\n            setComends(draw);\n            setCnt(0);\n        }else{\n            const draw = [ctx.getImageData(0,0,canvasWidth,canvaHeight),...commends];\n            setComends(draw);\n        }\n    }\n    const drawHandel = event => {\n        if(draw){\n            ctx.beginPath();\n            ctx.arc(event.clientX ,event.clientY,size,Math.PI * 2, false);\n            ctx.fillStyle=`${drawColor}`;\n            ctx.fill();\n         \n        }\n    }\n    const changeColor = selectColor =>{\n        const color = selectColor.target.value;\n        setColor(color);\n        setColorClass(selectColor.target.className)\n    }\n    const changeSize = event => {\n        const size = event.target.value > 100 ? 100 : event.target.value;\n        const resize =   size < 0 ? 1 :  size;\n        setSize(resize);\n    }\n    const resetHandel = () => {\n        ctx.beginPath();\n        ctx.clearRect(0, 0, canvasWidth, canvaHeight);\n    }\n   \n    const saveHandel = async event => {\n        const canvas = canvasRef.current;\n\n        const uploaded =  await imageUploader.upload(canvas.toDataURL(\"image/png\"));\n        const time =  Date.now();\n     \n        imageDatabase.saveImage(time,uploaded.url);\n    }\n   \n    const beforeHandel = () => {\n        \n        const cnt = commendCnt + 1 ;\n        if(cnt === commends.length){\n            return;\n        }\n        ctx.clearRect(0, 0, canvasWidth, canvaHeight);  \n        setCnt(cnt);\n        ctx.beginPath();\n        ctx.putImageData(commends[cnt],0,0);\n    }\n    const afterHandel = () => {\n        const cnt = commendCnt - 1 ;\n        if(cnt <  0){\n            return;\n        }\n        ctx.clearRect(0, 0, canvasWidth, canvaHeight);  \n        setCnt(cnt);\n        ctx.beginPath();\n        ctx.putImageData(commends[cnt],0,0);\n    }\n    return(\n            <div>\n\n                <canvas className={styles.can} ref={canvasRef} \n                    onMouseDown={drawStart}\n                    onMouseUp={drawEnd}\n                    onMouseMove={drawHandel}\n                    onMouseLeave={finishDrawing}\n                ></canvas>\n                <button className={styles.reset} onClick={resetHandel}>reset</button>\n                <button className={styles.reset} onClick={saveHandel}>save</button>\n                <button className={styles.reset} onClick={beforeHandel}>이전</button>\n                <button className={styles.reset} onClick={afterHandel}>앞으로</button>\n                <div className={styles.button_box}> \n                    <button className={styles.white} onClick={changeColor} value=\"white\"></button>\n                    <button className={styles.black} onClick={changeColor} value=\"black\"></button>\n                    <button className={styles.red} onClick={changeColor} value=\"red\" ></button>\n                    <button className={styles.blue} onClick={changeColor} value=\"blue\"></button>\n                    <button className={styles.yellow} onClick={changeColor} value=\"yellow\"></button>\n                    <button className={styles.brown} onClick={changeColor} value=\"brown\"></button>\n                    <button className={styles.green} onClick={changeColor} value=\"green\"></button>\n                    <button className={styles.pink} onClick={changeColor} value=\"pink\"></button>\n                    <input type=\"range\" id=\"vol\" name=\"vol\"  value={size} onChange={changeSize} min=\"0\" max=\"100\"></input>\n                    <input type=\"number\" min=\"0\" max=\"100\" onChange={changeSize} value={size}/>\n                    <div className={drawColorClass}></div>\n                </div>\n            </div>\n    )\n};\n\nexport default Mycanvas;","import {  useState } from 'react';\nimport styles from './App.module.css';\nimport SelfIntroduction from './selfIntroduction/selfIntroduction';\nimport ApiCollection from './apiCollection/apiCollection';\nimport Imgupload from './imgUpload/imgupload';\nimport PortfolioHeader from './header/portfolioHeader';\nimport Mycanvas from './my_canvas/my_canvas';\n\n\nfunction App({FileInput, imageDatabase,imageUploader}) {\n  const name = useState('apple');\n  const [page, setPage] = useState('self');\n \n  return (\n    <div className={styles.App}>\n      {/* <div className={styles.background}>\n       <img  src='https://res.cloudinary.com/dpwxqv19q/image/upload/v1630390131/fairy-tale-1180921_1920_xf3yx7.png' alt=\"잠자는 밤화면 배경\" />\n       </div> */}\n      <PortfolioHeader setPage={setPage} />\n      <section className={styles.toc}>\n      {(() => {\n        switch (page) {\n          case 'self':\n            return  <SelfIntroduction/>\n          case 'asw':\n            return  <ApiCollection props={name}/> \n          case 'habbit':\n            return <Imgupload \n              FileInput={FileInput}\n              imageDatabase = {imageDatabase}\n            /> \n          case 'canvas':\n            return  <Mycanvas \n            imageDatabase = {imageDatabase}\n            imageUploader= {imageUploader}/> \n          default:\n            return null\n        }\n      })()}    \n    </section>\n      \n    </div>\n  );\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","class ImageUploader {\n    async upload(file){\n    const data = new FormData();\n    data.append('file', file);\n    data.append('upload_preset', 'laweu6ql');\n    const result = await fetch(\n      'https://api.cloudinary.com/v1_1/dpwxqv19q/image/upload',\n      {\n        method: 'POST',\n        body: data,\n      }\n    );\n   // console.log('result.json()',result.json());\n    return await result.json();\n    }\n}\n\nexport default ImageUploader;","import React, {useCallback} from 'react'\nimport {useDropzone} from 'react-dropzone'\nimport styles from './myDropzone.module.css'\n\nconst MyDropzone = ({imageUploader, onFileChange}) => {\nconsole.log(\"MyDropzone ref\")\n  const onDrop =  useCallback(( acceptedFiles) => {\n        acceptedFiles.forEach((file) => {\n        const reader = new FileReader()\n  \n        reader.onload = async event => {\n          const uploaded =  await imageUploader.upload(file);\n          const time =  Date.now();\n          onFileChange({\n            id:time,\n            url: uploaded.url,\n          });\n        }\n        reader.readAsArrayBuffer(file)\n        \n      })\n  }, [])\n\n\n  const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop})\n\n\n  return (\n \n    <div {...getRootProps()} className={ styles.zoon }>\n      \n      <input {...getInputProps()}/>\n      {\n        isDragActive ?\n          <p>Drop the files here ...</p> :\n          <p>Drag 'n' drop some files here, or click to select files</p>\n      }\n      \n    </div>\n   \n  )\n}\nexport default MyDropzone;\n\n","import firebase from 'firebase/app';\nimport 'firebase/database';\n\n\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DB_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nexport const firebaseDatabase = firebaseApp.database();\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ImageUploader from './service/image_uploader';\nimport MyDropzone from './imgUpload/myDropzone/myDropzone';\nimport ImageDatabase from './service/image_database';\n\nconst imageDatabase = new ImageDatabase();\nconst imageUploader = new ImageUploader();\n\nconst FileInput = props => (\n  < MyDropzone {...props} imageUploader={imageUploader} />\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <App FileInput= {FileInput} \n        imageDatabase = {imageDatabase}\n        imageUploader={imageUploader}\n    />\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n","import { firebaseDatabase } from './firebase';\n\nclass ImageDatabase {\n  syncImages(files) {\n    const ref = firebaseDatabase.ref(`Image/`);\n    ref.on('value', snapshot => {\n      const value = snapshot.val();\n      value && files(value);\n    })\n    return () => ref.off();\n  }\n\n  saveImage(id, url) {\n    firebaseDatabase.ref(`Image/${id}`).set(url);\n   \n    \n  }\n\n  removeImage(id) {\n    firebaseDatabase.ref(`Image/${id}`).remove();\n  }\n}\n\n\n\n\n\nexport default ImageDatabase;\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"portfolioHeader_nav__2t_h9\",\"logo\":\"portfolioHeader_logo__1A9To\",\"list\":\"portfolioHeader_list__Wkn3A\",\"tag\":\"portfolioHeader_tag__2tRuI\"};"],"sourceRoot":""}